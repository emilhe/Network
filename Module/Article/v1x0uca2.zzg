using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Windows.Forms.DataVisualization.Charting;
using Controls.Charting;

namespace Controls.Article
{
    public partial class ParameterOverviewChart : UserControl
    {

        private readonly Dictionary<double, Color> _mBetaColors = new Dictionary<double, Color>(); 

        public ParameterOverviewChart()
        {
            InitializeComponent();
            SetupChartAreas();

            ChartUtils.StyleChart(chart1);
        }

        public void AddData(string key, double beta, double[] x, double[] y)
        {
            var series = new Series
            {
                Name = string.Format("β = {0}, {1}", beta, key),
                ChartArea = key,
            };
            // Should the legend be displayed?
            if (_mBetaColors.ContainsKey(beta))
            {
                series.IsVisibleInLegend = false;
                series.Color = _mBetaColors[beta];
            }
            else
            {
                series.LegendText = string.Format("β = {0}", beta);
                _mBetaColors.Add(beta, series.Color);
            }

            for (int i = 0; i < x.Length; i++)
            {
                series.Points.AddXY(x[i], y[i]);
            }
            chart1.Series.Add(series);
        }

        private void SetupChartAreas()
        {
            chart1.ChartAreas.Clear();
            chart1.Series.Clear();

            // Setup individual chart areas.
            var area0 = new ChartArea("BE") {AxisY = {Title = "E^B"}};
            chart1.ChartAreas.Add(area0);
            var area1 = new ChartArea("BC") {AxisY = {Title = "K^B"}};
            chart1.ChartAreas.Add(area1);
            var area2 = new ChartArea("TC") {AxisY = {Title = "K^T"}};
            chart1.ChartAreas.Add(area2);
            var area3 = new ChartArea("CF") {AxisY = {Title = "1/CF"}};
            chart1.ChartAreas.Add(area3);

            // Common stuff.
            foreach (var chartArea in chart1.ChartAreas)
            {
                chartArea.AxisX.Title = "α";
            }
        }
    }
}
